using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using TestDataService.Global;
using TestDataService.Models;
using Newtonsoft.Json;

namespace TestDataService.ViewModels
{
	public partial class UserStoryAcceptanceCriteriasViewModel: BaseViewModel<UserStoryAcceptanceCriterias>
	{
		//[JsonProperty("id")]
		public string Id { get; set; }
		//[JsonProperty("created_time")]
		public DateTime? CreatedTime { get; set; }
		//[JsonProperty("description")]
		public string Description { get; set; }
		//[JsonProperty("given_statement")]
		public string GivenStatement { get; set; }
		//[JsonProperty("priority")]
		public int? Priority { get; set; }
		//[JsonProperty("story_id")]
		public string StoryId { get; set; }
		//[JsonProperty("then_statement")]
		public string ThenStatement { get; set; }
		//[JsonProperty("when_statement")]
		public string WhenStatement { get; set; }
		//[JsonProperty("story")]
		//public UserStoriesViewModel StoryVM { get; set; }
		
		public UserStoryAcceptanceCriteriasViewModel(UserStoryAcceptanceCriterias entity) : base(entity)
		{
		}
		
		public UserStoryAcceptanceCriteriasViewModel()
		{
		}
		
	}
	
	public partial class UpdateUserStoryAcceptanceCriteriasViewModel: BaseUpdateViewModel<UpdateUserStoryAcceptanceCriteriasViewModel, UserStoryAcceptanceCriterias>
	{
		//[JsonProperty("id")]
		public Wrapper<string> Id { get; set; }
		//[JsonProperty("created_time")]
		public Wrapper<DateTime?> CreatedTime { get; set; }
		//[JsonProperty("description")]
		public Wrapper<string> Description { get; set; }
		//[JsonProperty("given_statement")]
		public Wrapper<string> GivenStatement { get; set; }
		//[JsonProperty("priority")]
		public Wrapper<int?> Priority { get; set; }
		//[JsonProperty("story_id")]
		public Wrapper<string> StoryId { get; set; }
		//[JsonProperty("then_statement")]
		public Wrapper<string> ThenStatement { get; set; }
		//[JsonProperty("when_statement")]
		public Wrapper<string> WhenStatement { get; set; }
		//[JsonProperty("story")]
		//public UserStoriesViewModel StoryVM { get; set; }
		
	}
}
