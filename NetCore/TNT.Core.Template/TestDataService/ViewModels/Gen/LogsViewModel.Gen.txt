using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using TestDataService.Global;
using TestDataService.Models;
using Newtonsoft.Json;

namespace TestDataService.ViewModels
{
	public partial class LogsViewModel: BaseViewModel<Logs>
	{
		//[JsonProperty("id")]
		public int Id { get; set; }
		//[JsonProperty("callsite")]
		public string Callsite { get; set; }
		//[JsonProperty("data")]
		public string Data { get; set; }
		//[JsonProperty("exception")]
		public string Exception { get; set; }
		//[JsonProperty("level")]
		public string Level { get; set; }
		//[JsonProperty("logged")]
		public DateTime Logged { get; set; }
		//[JsonProperty("logger")]
		public string Logger { get; set; }
		//[JsonProperty("machine_name")]
		public string MachineName { get; set; }
		//[JsonProperty("message")]
		public string Message { get; set; }
		//[JsonProperty("user_id")]
		public string UserId { get; set; }
		//[JsonProperty("user_name")]
		public string UserName { get; set; }
		
		public LogsViewModel(Logs entity) : base(entity)
		{
		}
		
		public LogsViewModel()
		{
		}
		
	}
	
	public partial class UpdateLogsViewModel: BaseUpdateViewModel<UpdateLogsViewModel, Logs>
	{
		//[JsonProperty("id")]
		public Wrapper<int> Id { get; set; }
		//[JsonProperty("callsite")]
		public Wrapper<string> Callsite { get; set; }
		//[JsonProperty("data")]
		public Wrapper<string> Data { get; set; }
		//[JsonProperty("exception")]
		public Wrapper<string> Exception { get; set; }
		//[JsonProperty("level")]
		public Wrapper<string> Level { get; set; }
		//[JsonProperty("logged")]
		public Wrapper<DateTime> Logged { get; set; }
		//[JsonProperty("logger")]
		public Wrapper<string> Logger { get; set; }
		//[JsonProperty("machine_name")]
		public Wrapper<string> MachineName { get; set; }
		//[JsonProperty("message")]
		public Wrapper<string> Message { get; set; }
		//[JsonProperty("user_id")]
		public Wrapper<string> UserId { get; set; }
		//[JsonProperty("user_name")]
		public Wrapper<string> UserName { get; set; }
		
	}
}
