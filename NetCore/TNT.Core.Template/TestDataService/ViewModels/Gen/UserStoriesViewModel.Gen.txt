using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using TestDataService.Global;
using TestDataService.Models;
using Newtonsoft.Json;

namespace TestDataService.ViewModels
{
	public partial class UserStoriesViewModel: BaseViewModel<UserStories>
	{
		//[JsonProperty("id")]
		public string Id { get; set; }
		//[JsonProperty("as_a")]
		public string AsA { get; set; }
		//[JsonProperty("code")]
		public string Code { get; set; }
		//[JsonProperty("created_date")]
		public DateTime? CreatedDate { get; set; }
		//[JsonProperty("description")]
		public string Description { get; set; }
		//[JsonProperty("epic_id")]
		public string EpicId { get; set; }
		//[JsonProperty("finished_date")]
		public DateTime? FinishedDate { get; set; }
		//[JsonProperty("is_defect")]
		public bool? IsDefect { get; set; }
		//[JsonProperty("iwant")]
		public string Iwant { get; set; }
		//[JsonProperty("priority")]
		public int? Priority { get; set; }
		//[JsonProperty("product_id")]
		public string ProductId { get; set; }
		//[JsonProperty("so_that")]
		public string SoThat { get; set; }
		//[JsonProperty("sprint_id")]
		public string SprintId { get; set; }
		//[JsonProperty("status")]
		public int? Status { get; set; }
		//[JsonProperty("epic")]
		//public EpicsViewModel EpicVM { get; set; }
		//[JsonProperty("product")]
		//public ProductsViewModel ProductVM { get; set; }
		//[JsonProperty("tasks")]
		//public IEnumerable<TasksViewModel> TasksVM { get; set; }
		//[JsonProperty("user_story_acceptance_criterias")]
		//public IEnumerable<UserStoryAcceptanceCriteriasViewModel> UserStoryAcceptanceCriteriasVM { get; set; }
		//[JsonProperty("user_story_requirements")]
		//public IEnumerable<UserStoryRequirementsViewModel> UserStoryRequirementsVM { get; set; }
		
		public UserStoriesViewModel(UserStories entity) : base(entity)
		{
		}
		
		public UserStoriesViewModel()
		{
		}
		
	}
	
	public partial class UpdateUserStoriesViewModel: BaseUpdateViewModel<UpdateUserStoriesViewModel, UserStories>
	{
		//[JsonProperty("id")]
		public Wrapper<string> Id { get; set; }
		//[JsonProperty("as_a")]
		public Wrapper<string> AsA { get; set; }
		//[JsonProperty("code")]
		public Wrapper<string> Code { get; set; }
		//[JsonProperty("created_date")]
		public Wrapper<DateTime?> CreatedDate { get; set; }
		//[JsonProperty("description")]
		public Wrapper<string> Description { get; set; }
		//[JsonProperty("epic_id")]
		public Wrapper<string> EpicId { get; set; }
		//[JsonProperty("finished_date")]
		public Wrapper<DateTime?> FinishedDate { get; set; }
		//[JsonProperty("is_defect")]
		public Wrapper<bool?> IsDefect { get; set; }
		//[JsonProperty("iwant")]
		public Wrapper<string> Iwant { get; set; }
		//[JsonProperty("priority")]
		public Wrapper<int?> Priority { get; set; }
		//[JsonProperty("product_id")]
		public Wrapper<string> ProductId { get; set; }
		//[JsonProperty("so_that")]
		public Wrapper<string> SoThat { get; set; }
		//[JsonProperty("sprint_id")]
		public Wrapper<string> SprintId { get; set; }
		//[JsonProperty("status")]
		public Wrapper<int?> Status { get; set; }
		//[JsonProperty("epic")]
		//public EpicsViewModel EpicVM { get; set; }
		//[JsonProperty("product")]
		//public ProductsViewModel ProductVM { get; set; }
		//[JsonProperty("tasks")]
		//public IEnumerable<TasksViewModel> TasksVM { get; set; }
		//[JsonProperty("user_story_acceptance_criterias")]
		//public IEnumerable<UserStoryAcceptanceCriteriasViewModel> UserStoryAcceptanceCriteriasVM { get; set; }
		//[JsonProperty("user_story_requirements")]
		//public IEnumerable<UserStoryRequirementsViewModel> UserStoryRequirementsVM { get; set; }
		
	}
}
