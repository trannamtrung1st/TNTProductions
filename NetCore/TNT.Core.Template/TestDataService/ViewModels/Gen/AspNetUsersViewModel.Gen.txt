using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using TestDataService.Global;
using TestDataService.Models.Entities;
using Newtonsoft.Json;

namespace TestDataService.ViewModels
{
	public partial class AspNetUsersViewModel: BaseViewModel<AspNetUsers>
	{
		//[JsonProperty("id")]
		public string Id { get; set; }
		//[JsonProperty("access_failed_count")]
		public int AccessFailedCount { get; set; }
		//[JsonProperty("concurrency_stamp")]
		public string ConcurrencyStamp { get; set; }
		//[JsonProperty("email")]
		public string Email { get; set; }
		//[JsonProperty("email_confirmed")]
		public bool EmailConfirmed { get; set; }
		//[JsonProperty("lockout_enabled")]
		public bool LockoutEnabled { get; set; }
		//[JsonProperty("lockout_end")]
		public DateTimeOffset? LockoutEnd { get; set; }
		//[JsonProperty("normalized_email")]
		public string NormalizedEmail { get; set; }
		//[JsonProperty("normalized_user_name")]
		public string NormalizedUserName { get; set; }
		//[JsonProperty("password_hash")]
		public string PasswordHash { get; set; }
		//[JsonProperty("phone_number")]
		public string PhoneNumber { get; set; }
		//[JsonProperty("phone_number_confirmed")]
		public bool PhoneNumberConfirmed { get; set; }
		//[JsonProperty("security_stamp")]
		public string SecurityStamp { get; set; }
		//[JsonProperty("two_factor_enabled")]
		public bool TwoFactorEnabled { get; set; }
		//[JsonProperty("user_name")]
		public string UserName { get; set; }
		//[JsonProperty("asp_net_user_claims")]
		//public IEnumerable<AspNetUserClaimsViewModel> AspNetUserClaimsVM { get; set; }
		//[JsonProperty("asp_net_user_logins")]
		//public IEnumerable<AspNetUserLoginsViewModel> AspNetUserLoginsVM { get; set; }
		//[JsonProperty("asp_net_user_roles")]
		//public IEnumerable<AspNetUserRolesViewModel> AspNetUserRolesVM { get; set; }
		//[JsonProperty("asp_net_user_tokens")]
		//public IEnumerable<AspNetUserTokensViewModel> AspNetUserTokensVM { get; set; }
		
		public AspNetUsersViewModel(AspNetUsers entity) : base(entity)
		{
		}
		
		public AspNetUsersViewModel()
		{
		}
		
	}
	
	public partial class UpdateAspNetUsersViewModel: BaseUpdateViewModel<UpdateAspNetUsersViewModel, AspNetUsers>
	{
		//[JsonProperty("id")]
		public Wrapper<string> Id { get; set; }
		//[JsonProperty("access_failed_count")]
		public Wrapper<int> AccessFailedCount { get; set; }
		//[JsonProperty("concurrency_stamp")]
		public Wrapper<string> ConcurrencyStamp { get; set; }
		//[JsonProperty("email")]
		public Wrapper<string> Email { get; set; }
		//[JsonProperty("email_confirmed")]
		public Wrapper<bool> EmailConfirmed { get; set; }
		//[JsonProperty("lockout_enabled")]
		public Wrapper<bool> LockoutEnabled { get; set; }
		//[JsonProperty("lockout_end")]
		public Wrapper<DateTimeOffset?> LockoutEnd { get; set; }
		//[JsonProperty("normalized_email")]
		public Wrapper<string> NormalizedEmail { get; set; }
		//[JsonProperty("normalized_user_name")]
		public Wrapper<string> NormalizedUserName { get; set; }
		//[JsonProperty("password_hash")]
		public Wrapper<string> PasswordHash { get; set; }
		//[JsonProperty("phone_number")]
		public Wrapper<string> PhoneNumber { get; set; }
		//[JsonProperty("phone_number_confirmed")]
		public Wrapper<bool> PhoneNumberConfirmed { get; set; }
		//[JsonProperty("security_stamp")]
		public Wrapper<string> SecurityStamp { get; set; }
		//[JsonProperty("two_factor_enabled")]
		public Wrapper<bool> TwoFactorEnabled { get; set; }
		//[JsonProperty("user_name")]
		public Wrapper<string> UserName { get; set; }
		//[JsonProperty("asp_net_user_claims")]
		//public IEnumerable<AspNetUserClaimsViewModel> AspNetUserClaimsVM { get; set; }
		//[JsonProperty("asp_net_user_logins")]
		//public IEnumerable<AspNetUserLoginsViewModel> AspNetUserLoginsVM { get; set; }
		//[JsonProperty("asp_net_user_roles")]
		//public IEnumerable<AspNetUserRolesViewModel> AspNetUserRolesVM { get; set; }
		//[JsonProperty("asp_net_user_tokens")]
		//public IEnumerable<AspNetUserTokensViewModel> AspNetUserTokensVM { get; set; }
		
	}
}
