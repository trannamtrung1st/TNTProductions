<#@ template debug="true" hostSpecific="true" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core" #>
<#@ Assembly Name="System.Windows.Forms" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ assembly name="$(ProjectDir)bin/Debug/TNT.TemplateAPI.dll" #>
<#@ assembly name="$(ProjectDir)bin/Debug/TNT.Template.DataService.dll" #>
<#@ include file="$(ProjectDir)Templates/TTManager.ttinclude" #>
<#@ import namespace="TNT.Template.DataService.Data" #>
<#@ import namespace="TNT.Template.DataService.Models.Extensions" #>
<#
	var projectPath = Host.ResolveAssemblyReference("$(ProjectDir)");
	var solutionPath = Host.ResolveAssemblyReference("$(SolutionDir)");
	var dt = new EdmxParser(@"{project}Models/AppEntity.edmx".Replace("{project}", projectPath).Replace("{solution}", solutionPath) ,"TestDataService").Data;
	var manager = TemplateFileManager.Create(this);
#>
<#
	var eGen = new EntityGen(dt);
	manager.StartNewFile("EntityGen.cs");
#>
<#=eGen.Generate()#><#
	foreach (var e in dt.Entities)
	{
		var eeGen = new EntityExtensionGen(e);
		manager.StartNewFile(e.EntityName+"ExtensionGen.cs");
#>
<#=eeGen.Generate()
#><#=eeGen.ENamespace.Generate()#><#
	}
	manager.Process();
#>
